// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package server

import (
	"github.com/maczikasz/go-runs/internal/model"
	"sync"
)

// SessionStoreMock is a mock implementation of SessionStore.
//
// 	func TestSomethingThatUsesSessionStore(t *testing.T) {
//
// 		// make and configure a mocked SessionStore
// 		mockedSessionStore := &SessionStoreMock{
// 			GetSessionFunc: func(s string) (model.Session, error) {
// 				panic("mock out the GetSession method")
// 			},
// 		}
//
// 		// use mockedSessionStore in code that requires SessionStore
// 		// and then make assertions.
//
// 	}
type SessionStoreMock struct {
	// GetSessionFunc mocks the GetSession method.
	GetSessionFunc func(s string) (model.Session, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetSession holds details about calls to the GetSession method.
		GetSession []struct {
			// S is the s argument value.
			S string
		}
	}
	lockGetSession sync.RWMutex
}

// GetSession calls GetSessionFunc.
func (mock *SessionStoreMock) GetSession(s string) (model.Session, error) {
	if mock.GetSessionFunc == nil {
		panic("SessionStoreMock.GetSessionFunc: method is nil but SessionStore.GetSession was just called")
	}
	callInfo := struct {
		S string
	}{
		S: s,
	}
	mock.lockGetSession.Lock()
	mock.calls.GetSession = append(mock.calls.GetSession, callInfo)
	mock.lockGetSession.Unlock()
	return mock.GetSessionFunc(s)
}

// GetSessionCalls gets all the calls that were made to GetSession.
// Check the length with:
//     len(mockedSessionStore.GetSessionCalls())
func (mock *SessionStoreMock) GetSessionCalls() []struct {
	S string
} {
	var calls []struct {
		S string
	}
	mock.lockGetSession.RLock()
	calls = mock.calls.GetSession
	mock.lockGetSession.RUnlock()
	return calls
}
